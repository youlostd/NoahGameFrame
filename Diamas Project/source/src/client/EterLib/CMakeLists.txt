set(SOURCE_FILES
	AttributeData.cpp
	AttributeData.h
	AttributeInstance.cpp
	AttributeInstance.h
	BlockTexture.cpp
	Camera.cpp
	Camera.h
	CharacterEffectRegistry.cpp
	CharacterEffectRegistry.hpp
	ClientConfig.cpp
	ClientConfig.h
	CollisionData.cpp
	CollisionData.h
	ColorTransitionHelper.cpp
	ColorTransitionHelper.h
	CullingManager.cpp
	CullingManager.h
	DibBar.cpp
	Engine.cpp
	Engine.hpp
	EnvironmentMap.cpp
	EnvironmentMap.h
	FontManager.cpp
	FontManager.hpp
	GrpBase.cpp
	GrpBase.h
	GrpCollisionObject.cpp
	GrpCollisionObject.h
	GrpColor.cpp
	GrpColorInstance.cpp
	GrpDetector.cpp
	GrpDetector.h
	GrpDevice.cpp
	GrpDevice.h
	GrpDIB.cpp
	GrpDIB.h
	GrpExpandedImageInstance.cpp
	GrpExpandedImageInstance.h
	GrpFontTexture.cpp
	GrpFontTexture.h
	GrpImage.cpp
	GrpImageInstance.cpp
	GrpImageInstance.h
	GrpImageTexture.cpp
	GrpImageTexture.h
	GrpIndexBuffer.cpp
	GrpIndexBuffer.h
	GrpLightManager.cpp
	GrpLightManager.h
	GrpMarkInstance.cpp
	GrpMarkInstance.h
	GrpMath.cpp
	GrpMath.h
	GrpMeshVertexBuffer.h
	GrpObjectInstance.cpp
	GrpObjectInstance.h
	GrpRatioInstance.cpp
	GrpRatioInstance.h
	GrpRenderTargetTexture.cpp
	GrpRenderTargetTexture.h
	GrpScreen.cpp
	GrpScreen.h
	GrpShadowTexture.cpp
	GrpShadowTexture.h
	GrpText.h
	GrpText.cpp
	GrpTextInstance.cpp
	GrpTextInstance.h
	GrpTexture.cpp
	GrpTexture.h
	GrpVertexBuffer.cpp
	GrpVertexBuffer.h
	GrpShaderConstant.cpp
	GrpShaderConstant.h
	GrpShaderFX.cpp
	GrpShaderFX.h
	GrpTechnique.cpp
	GrpTechnique.h
	Handle.h
	KeyboardInput.cpp
	KeyboardInput.hpp
	LensFlare.cpp
	LensFlare.h
	lineintersect_utils.cpp
	MSApplication.cpp
	MSApplication.h
	MSWindow.cpp
	MSWindow.h
	MatrixStack.h
	MatrixStack.cpp
	parser.cpp
	parser.h
	ReferenceObject.cpp
	ReferenceObject.h
	RenderTargetManager.cpp
	RenderTargetManager.h
	Resource.cpp
	Resource.h
	ResourceManager.cpp
	ResourceManager.h
	ScreenFilter.cpp
	ScreenFilter.h
	SkyBox.cpp
	SkyBox.h
	StateManager.cpp
	StateManager.h
	SharedVertexBuffer.cpp
	SharedVertexBuffer.hpp
	TextFileLoader.cpp
	TextFileLoader.h
	TextTag.cpp
	TextTag.h
	Util.cpp
	Util.h
	VideoMode.cpp
	VideoMode.hpp
	VideoModeList.hpp
	VideoModeList.cpp
)

add_library(metin2client_lib STATIC ${SOURCE_FILES})
target_link_libraries(metin2client_lib
	PUBLIC 
	spdlog::spdlog
	Eigen3::Eigen
	freetype::freetype
	effolkronium_random 
	utf8cpp
	metin2client_base
	m2.shared
	metin2_base
	d3d9.lib
	d3dx9::d3dx9
	bx)
target_precompile_headers(metin2client_lib PRIVATE "StdAfx.h" "StdAfx.cpp")
